services:
  # Traefik 2 - Reverse Proxy
  traefik:
    container_name: traefik
    image: traefik:2.10
    security_opt: [no-new-privileges:true]
    restart: unless-stopped
    profiles: ["core", "all"]
    networks:
      t2_proxy:
        ipv4_address: 172.16.90.254
      socket_proxy:
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 5s
      retries: 3
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - $APPDIR/traefik/acme/acme.json:/acme.json
      - $APPDIR/traefik/traefik.yml:/etc/traefik/traefik.yml
      - $APPDIR/traefik/rules:/etc/traefik/rules
      - $DOCKERDIR/logs/traefik:/logs
    environment:
      - TZ=$TZ
      - CF_API_EMAIL_FILE=/run/secrets/cf_email
      - CF_API_KEY_FILE=/run/secrets/cf_api_key
      - HTPASSWD_FILE=/run/secrets/htpasswd
      - DOMAINNAME_CLOUD_SERVER
    secrets:
      - cf_email
      - cf_api_key
      - htpasswd
    depends_on: [socket-proxy]
    labels:
      traefik.enable: true
      traefik.http.routers.traefik-rtr.entrypoints: https
      traefik.http.routers.traefik-rtr.rule: Host(`$TRAEFIK_DOMAINNAME`)
      traefik.http.routers.traefik-rtr.tls.certresolver: dns-cloudflare
      traefik.http.routers.traefik-rtr.tls.domains[0].main: "$DOMAINNAME"
      traefik.http.routers.traefik-rtr.tls.domains[0].sans: "*.$DOMAINNAME"
      #traefik.http.routers.traefik-rtr.middlewares: middlewares-authelia@file
      traefik.http.routers.traefik-rtr.tls: true
      traefik.http.routers.traefik-rtr.service: api@internal
      ## Healthcheck/ping
      traefik.http.routers.ping.rule: Host(`$TRAEFIK_DOMAINNAME`) && Path(`/ping`)"
      traefik.http.routers.ping.tls: true
      traefik.http.routers.ping.service: ping@internal
